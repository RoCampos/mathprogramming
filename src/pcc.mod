set V := 1..20;

set E, dimen 4;

set EDGES := 1..76;

set EE := setof {(i, v1, v2, c) in E} (v1, v2);
set EC := setof {(i, v1, v2, c) in E} (i, v1, v2);

param aresta1{EDGES};
param aresta2{EDGES};
param cost{EDGES} > 0;

var e{EE};

minimize obj:
	sum {v1 in V, v2 in V, i in EDGES: (i, v1, v2) in EC and (v1, v2) in EE} e[v1, v2] * cost[i];
	
	r1{i in V ,j in V, k in V: (i > j or i < j) and (j <  k or k > k) and ( (i,j) in EE and (j,k) in EE and (k,i) in EE )}: e[i,j] + e[j,k] + e[k,i] >= 1;

	r2{ (v1, v2) in EE}: (e[v1, v2] + e[v2,v1]) >= 1; 

solve;

display	obj;
display e;

data;


param: aresta1 aresta2 cost :=
1 	1 	2 	59
2 	1 	8	220
3 	2 	3 	53
4 	2 	5 	52
5 	3 	4 	60
6 	3 	6 	53
7 	4 	7 	55
8 	5 	6 	55
9 	5 	9 	170
10 	6 	7 	58
11 	6 	10	170
12 	7	11 	180
13 	8 	9 	54
14 	8 	12 	81
15         9          10	54
16 	9 	13 	80
17 	10 	11	62
18	10 	14 	85
19	11	15 	85
20	12 	13 	52
21	12 	16 	120
22	13 	14 	52
23	13 	17 	130
24	14 	15 	62
25 	14 	18	130
26 	15 	19	130
27 	16	17 	56
28 	17 	18 	51
29 	18	19 	61
30         19        20         52
31         18        20         110
32         2		5	52
33         3		6	53
34         6		7	58
35         8		12	81
36        11	15	85
37        17	18	51
38         18	19	62
39 	2 	1 	59
40 	8 	1	220
41	3 	2 	53
42	5 	2 	52
43	4 	3 	60
44	6 	3 	53
45	7 	4 	55
46	6 	5 	55
47	9 	5 	170
48 	7 	6 	58
49 	10 	6	170
50 	11	7 	180
51 	9 	8 	54
52 	12 	8 	81
53         10         9	54
54 	13 	9 	80
55 	11 	10	62
56	14 	10 	85
57	15	11 	85
58	13 	12 	52
59	16 	12 	120
60	14 	13 	52
61	17 	13 	130
62	15 	14 	62
63 	18 	14	130
64 	19 	15	130
65 	17	16 	56
66 	18 	17 	51
67 	19	18 	61
68         20        19         52
69         20        18         110
70	5	2	52
71         6		3	53
72         7		6	58
73        12	8	81
74        15	11	85
75        18	17	51
76        19	18	62;

set E :=
1 	1 	2 	59
2 	1 	8	220
3 	2 	3 	53
4 	2 	5 	52
5 	3 	4 	60
6 	3 	6 	53
7 	4 	7 	55
8 	5 	6 	55
9 	5 	9 	170
10 	6 	7 	58
11 	6 	10	170
12 	7	11 	180
13 	8 	9 	54
14 	8 	12 	81
15         9          10	54
16 	9 	13 	80
17 	10 	11	62
18	10 	14 	85
19	11	15 	85
20	12 	13 	52
21	12 	16 	120
22	13 	14 	52
23	13 	17 	130
24	14 	15 	62
25 	14 	18	130
26 	15 	19	130
27 	16	17 	56
28 	17 	18 	51
29 	18	19 	61
30         19        20         52
31         18        20         110
32         2		5	52
33         3		6	53
34         6		7	58
35         8		12	81
36        11	15	85
37        17	18	51
38         18	19	62
39 	2 	1 	59
40 	8 	1	220
41	3 	2 	53
42	5 	2 	52
43	4 	3 	60
44	6 	3 	53
45	7 	4 	55
46	6 	5 	55
47	9 	5 	170
48 	7 	6 	58
49 	10 	6	170
50 	11	7 	180
51 	9 	8 	54
52 	12 	8 	81
53         10         9	54
54 	13 	9 	80
55 	11 	10	62
56	14 	10 	85
57	15	11 	85
58	13 	12 	52
59	16 	12 	120
60	14 	13 	52
61	17 	13 	130
62	15 	14 	62
63 	18 	14	130
64 	19 	15	130
65 	17	16 	56
66 	18 	17 	51
67 	19	18 	61
68         20        19         52
69         20        18         110
70	5	2	52
71         6		3	53
72         7		6	58
73        12	8	81
74        15	11	85
75        18	17	51
76        19	18	62

end;

